/* eslint-disable flowtype/require-valid-file-annotation, import/no-commonjs */

module.exports = {
	parser: 'babel-eslint',
	env: {
		browser: true,
		es6: true,
		node: true,
		jasmine: true,
	},
	globals: {
		__DEV__: 'writeable',
	},
	parserOptions: {
		ecmaVersion: 2017,
		sourceType: 'module',
	},
	plugins: [
		'babel',
		'cumul8',
		'filenames',
		'flowtype',
		'import',
		'jasmine',
		'json',
		'jsx-a11y',
		'promise',
		'react',
		'react-hooks',
		'sonarjs',
	],
	rules: {
		// ERRORS

		'accessor-pairs': 'error',
		'array-bracket-spacing': ['error', 'never'],
		'arrow-parens': ['error', 'always'],
		'arrow-spacing': ['error', {before: true, after: true}],
		'babel/object-curly-spacing': ['error', 'never'],
		'babel/semi': ['error', 'always'],
		'block-scoped-var': 'error',
		'block-spacing': ['error', 'always'],
		'brace-style': ['error', '1tbs', {allowSingleLine: true}],
		'callback-return': 'error',
		'comma-dangle': ['error', {
			arrays: 'always-multiline',
			objects: 'always-multiline',
			imports: 'always-multiline',
			exports: 'always-multiline',
			functions: 'never',
		}],
		'comma-spacing': ['error', {before: false, after: true}],
		'comma-style': ['error', 'last'],
		'computed-property-spacing': ['error', 'never'],
		'consistent-return': 'error',
		'consistent-this': 'error',
		'constructor-super': 'error',
		'cumul8/alphabetical-destructuring': 'error',
		'cumul8/alphabetical-stylesheets': 'error',
		'cumul8/inefficient-for-each': 'error',
		'cumul8/inefficient-for-loop': 'error',
		'dot-location': ['error', 'property'],
		'dot-notation': 'error',
		'eol-last': ['error', 'always'],
		eqeqeq: ['error', 'allow-null'],
		'filenames/match-exported': 'error',
		'flowtype/array-style-complex-type': 'error',
		'flowtype/array-style-simple-type': 'error',
		'flowtype/boolean-style': ['error', 'boolean'],
		'flowtype/define-flow-type': 'error',
		'flowtype/delimiter-dangle': ['error', 'always-multiline'],
		'flowtype/generic-spacing': ['error', 'never'],
		'flowtype/newline-after-flow-annotation': 'error',
		'flowtype/no-dupe-keys': 'error',
		'flowtype/no-existential-type': 'error',
		'flowtype/no-mixed': 'error',
		'flowtype/no-primitive-constructor-types': 'error',
		'flowtype/no-types-missing-file-annotation': 'error',
		'flowtype/no-unused-expressions': 'error',
		'flowtype/no-weak-types': ['error', {
			any: false,
			Object: true,
			Function: true,
		}],
		'flowtype/object-type-delimiter': ['error', 'comma'],
		'flowtype/require-exact-type': 'error',
		'flowtype/require-parameter-type': 'error',
		'flowtype/require-readonly-react-props': 'error',
		'flowtype/require-return-type': ['error', 'always', {
			annotateUndefined: 'never',
		}],
		'flowtype/require-types-at-top': ['error', 'always'],
		'flowtype/require-valid-file-annotation': ['error', 'always', {
			annotationStyle: 'line',
		}],
		'flowtype/semi': ['error', 'always'],
		'flowtype/sort-keys': ['error', 'asc', {
			caseSensitive: false,
			natural: true,
		}],
		'flowtype/space-after-type-colon': ['error', 'always'],
		'flowtype/space-before-generic-bracket': ['error', 'never'],
		'flowtype/space-before-type-colon': ['error', 'never'],
		'flowtype/spread-exact-type': 'error',
		'flowtype/type-id-match': ['error', '^([A-Z][a-z0-9]+)+Type$'],
		'flowtype/type-import-style': ['error', 'identifier'],
		'flowtype/union-intersection-spacing': ['error', 'always'],
		'flowtype/use-flow-type': 'error',
		'for-direction': 'error',
		'func-call-spacing': ['error', 'never'],
		'func-name-matching': 'error',
		'func-style': ['error', 'expression'],
		'generator-star-spacing': ['error', {before: false, after: true}],
		'getter-return': 'error',
		'global-require': 'error',
		'guard-for-in': 'error',
		'handle-callback-err': 'error',
		'import/default': 'error',
		'import/dynamic-import-chunkname': ['error', {
			importFunctions: ['dynamicImport'],
			webpackChunknameFormat: '[a-zA-Z0-57-9-/_]',
		}],
		'import/export': 'error',
		'import/extensions': ['error', 'never'],
		'import/first': 'error',
		'import/named': 'error',
		'import/newline-after-import': 'error',
		'import/no-absolute-path': 'error',
		'import/no-amd': 'error',
		'import/no-commonjs': 'error',
		'import/no-duplicates': 'error',
		'import/no-mutable-exports': 'error',
		'import/no-named-as-default-member': 'error',
		'import/no-named-default': 'error',
		'import/no-namespace': 'error',
		'import/no-self-import': 'error',
		'import/no-unresolved': 'error',
		'import/no-useless-path-segments': 'error',
		'import/prefer-default-export': 'error',
		indent: ['error', 'tab', {SwitchCase: 1}],
		'jasmine/expect-matcher': 'error',
		'jasmine/expect-single-argument': 'error',
		'jasmine/missing-expect': 'error',
		'jasmine/no-expect-in-setup-teardown': 'error',
		'jasmine/no-focused-tests': 'error',
		'jasmine/no-global-setup': 'error',
		'jasmine/no-promise-without-done-fail': 'error',
		'jasmine/no-spec-dupes': ['error', 'branch'],
		'jasmine/no-suite-dupes': 'error',
		'jasmine/no-suite-callback-args': 'error',
		'jasmine/no-unsafe-spy': 'error',
		'jasmine/prefer-jasmine-matcher': 'error',
		'jsx-a11y/accessible-emoji': 'error',
		'jsx-a11y/aria-activedescendant-has-tabindex': 'error',
		'jsx-a11y/alt-text': 'error',
		'jsx-a11y/anchor-has-content': 'error',
		'jsx-a11y/anchor-is-valid': 'error',
		'jsx-a11y/aria-props': 'error',
		'jsx-a11y/aria-proptypes': 'error',
		'jsx-a11y/aria-role': 'error',
		'jsx-a11y/aria-unsupported-elements': 'error',
		'jsx-a11y/heading-has-content': 'error',
		'jsx-a11y/html-has-lang': 'error',
		'jsx-a11y/iframe-has-title': 'error',
		'jsx-a11y/img-redundant-alt': 'error',
		'jsx-a11y/interactive-supports-focus': 'error',
		'jsx-a11y/lang': 'error',
		'jsx-a11y/media-has-caption': 'error',
		'jsx-a11y/mouse-events-have-key-events': 'error',
		'jsx-a11y/no-access-key': 'error',
		'jsx-a11y/no-distracting-elements': 'error',
		'jsx-a11y/no-interactive-element-to-noninteractive-role': 'error',
		'jsx-a11y/no-noninteractive-element-to-interactive-role': 'error',
		'jsx-a11y/no-noninteractive-tabindex': 'error',
		'jsx-a11y/no-onchange': 'error',
		'jsx-a11y/no-redundant-roles': 'error',
		'jsx-a11y/no-static-element-interactions': 'error',
		'jsx-a11y/role-has-required-aria-props': 'error',
		'jsx-a11y/role-supports-aria-props': 'error',
		'jsx-a11y/scope': 'error',
		'jsx-a11y/tabindex-no-positive': 'error',
		'jsx-quotes': ['error', 'prefer-single'],
		'key-spacing': ['error', {mode: 'strict', beforeColon: false, afterColon: true}],
		'keyword-spacing': ['error', {before: true, after: true, overrides: {}}],
		'lines-between-class-members': ['error', 'always'],
		'max-depth': ['error', 3],
		'max-len': ['error', 150, 4],
		'max-lines': ['error', {max: 1000, skipBlankLines: false, skipComments: true}],
		'max-lines-per-function': ['error', 250],
		'max-nested-callbacks': ['error', 5],
		'max-params': ['error', 4],
		'max-statements': ['error', 100],
		'max-statements-per-line': ['error', {max: 2}],
		'newline-per-chained-call': ['error', {ignoreChainWithDepth: 3}],
		'new-parens': 'error',
		'no-alert': 'error',
		'no-array-constructor': 'error',
		'no-async-promise-executor': 'error',
		'no-await-in-loop': 'error',
		'no-bitwise': 'error',
		'no-buffer-constructor': 'error',
		'no-caller': 'error',
		'no-class-assign': 'error',
		'no-compare-neg-zero': 'error',
		'no-cond-assign': 'error',
		'no-const-assign': 'error',
		'no-constant-condition': 'error',
		'no-control-regex': 'error',
		'no-debugger': 'error',
		'no-delete-var': 'error',
		'no-div-regex': 'error',
		'no-dupe-args': 'error',
		'no-dupe-class-members': 'error',
		'no-dupe-keys': 'error',
		'no-duplicate-case': 'error',
		'no-duplicate-imports': 'error',
		'no-else-return': 'error',
		'no-empty': 'error',
		'no-empty-character-class': 'error',
		'no-empty-pattern': 'error',
		'no-eval': 'error',
		'no-ex-assign': 'error',
		'no-extend-native': 'error',
		'no-extra-bind': 'error',
		'no-extra-boolean-cast': 'error',
		'no-extra-semi': 'error',
		'no-fallthrough': 'error',
		'no-floating-decimal': 'error',
		'no-func-assign': 'error',
		'no-global-assign': 'error',
		'no-implicit-coercion': ['error', {boolean: true, number: true, string: true}],
		'no-implicit-globals': 'error',
		'no-implied-eval': 'error',
		'no-inline-comments': 'error',
		'no-inner-declarations': 'error',
		'no-invalid-regexp': 'error',
		'no-irregular-whitespace': 'error',
		'no-iterator': 'error',
		'no-labels': 'error',
		'no-label-var': 'error',
		'no-lone-blocks': 'error',
		'no-lonely-if': 'error',
		'no-loop-func': 'error',
		'no-misleading-character-class': 'error',
		'no-mixed-spaces-and-tabs': 'error',
		'no-multi-assign': 'error',
		'no-multi-spaces': 'error',
		'no-multi-str': 'error',
		'no-multiple-empty-lines': 'error',
		'no-nested-ternary': 'error',
		'no-new': 'error',
		'no-new-func': 'error',
		'no-new-object': 'error',
		'no-new-require': 'error',
		'no-new-symbol': 'error',
		'no-new-wrappers': 'error',
		'no-octal': 'error',
		'no-octal-escape': 'error',
		'no-obj-calls': 'error',
		'no-path-concat': 'error',
		'no-process-env': 'error',
		'no-proto': 'error',
		'no-prototype-builtins': 'error',
		'no-redeclare': 'error',
		'no-regex-spaces': 'error',
		'no-return-assign': 'error',
		'no-return-await': 'error',
		'no-script-url': 'error',
		'no-self-assign': 'error',
		'no-self-compare': 'error',
		'no-sequences': 'error',
		'no-shadow-restricted-names': 'error',
		'no-sparse-arrays': 'error',
		'no-template-curly-in-string': 'error',
		'no-this-before-super': 'error',
		'no-throw-literal': 'error',
		'no-trailing-spaces': ['error', {skipBlankLines: false}],
		'no-undef': 'error',
		'no-undef-init': 'error',
		'no-unexpected-multiline': 'error',
		'no-unmodified-loop-condition': 'error',
		'no-unreachable': 'error',
		'no-unsafe-finally': 'error',
		'no-unsafe-negation': 'error',
		'no-unused-expressions': 'error',
		'no-unused-vars': ['error', {args: 'none'}],
		'no-useless-call': 'error',
		'no-useless-catch': 'error',
		'no-useless-computed-key': 'error',
		'no-useless-concat': 'error',
		'no-useless-constructor': 'error',
		'no-useless-escape': 'error',
		'no-useless-rename': ['error', {
			ignoreDestructuring: false,
			ignoreImport: false,
			ignoreExport: false,
		}],
		'no-var': 'error',
		'no-void': 'error',
		'no-whitespace-before-property': 'error',
		'no-with': 'error',
		'object-shorthand': 'error',
		'one-var-declaration-per-line': 'error',
		'operator-assignment': ['error', 'always'],
		'operator-linebreak': ['error', 'after'],
		'padding-line-between-statements': [
			'error',
			{blankLine: 'always', prev: ['directive'], next: '*'},
			{blankLine: 'never', prev: ['directive'], next: ['directive']},
		],
		'prefer-arrow-callback': 'error',
		'prefer-const': 'error',
		'prefer-numeric-literals': 'error',
		'prefer-promise-reject-errors': 'error',
		'prefer-object-spread': 'error',
		'prefer-spread': 'error',
		'prefer-template': 'error',
		'promise/always-return': 'error',
		'promise/catch-or-return': ['error', {terminationMethod: ['catch', 'finally']}],
		'promise/no-return-wrap': 'error',
		'promise/no-native': 'error',
		'promise/no-new-statics': 'error',
		'promise/no-promise-in-callback': 'error',
		'promise/no-return-in-finally': 'error',
		'promise/param-names': 'error',
		'promise/valid-params': 'error',
		quotes: ['error', 'single', {allowTemplateLiterals: true}],
		'quote-props': ['error', 'as-needed'],
		radix: 'error',
		'react/default-props-match-prop-types': ['error', {allowRequiredDefaults: true}],
		'react/display-name': ['error', {ignoreTranspilerName: true}],
		'react/forbid-foreign-prop-types': 'error',
		'react/forbid-prop-types': ['error', {forbid: ['any', 'array', 'object']}],
		'react/jsx-boolean-value': ['error', 'always'],
		'react/jsx-closing-bracket-location': ['error', {location: 'after-props'}],
		'react/jsx-closing-tag-location': 'error',
		'react/jsx-curly-spacing': ['error', 'never'],
		'react/jsx-equals-spacing': ['error', 'never'],
		'react/jsx-fragments': 'error',
		'react/jsx-indent': ['error', 'tab'],
		'react/jsx-indent-props': ['error', 'tab'],
		'react/jsx-key': 'error',
		'react/jsx-max-props-per-line': ['error', {maximum: 4}],
		'react/jsx-no-comment-textnodes': 'error',
		'react/jsx-no-duplicate-props': ['error', {ignoreCase: true}],
		'react/jsx-no-target-blank': 'error',
		'react/jsx-no-undef': ['error', {allowGlobals: true}],
		'react/jsx-pascal-case': 'error',
		'react/jsx-props-no-multi-spaces': 'error',
		'react/jsx-props-no-spreading': 'error',
		'react/jsx-sort-default-props': ['error', {ignoreCase: true}],
		'react/jsx-sort-props': 'error',
		'react/jsx-tag-spacing': ['error', {
			afterOpening: 'never',
			beforeSelfClosing: 'always',
			closingSlash: 'never',
		}],
		'react/jsx-uses-react': 'error',
		'react/jsx-uses-vars': 'error',
		'react/jsx-wrap-multilines': 'error',
		'react/no-access-state-in-setstate': 'error',
		'react/no-children-prop': 'error',
		'react/no-danger': 'error',
		'react/no-danger-with-children': 'error',
		'react/no-deprecated': 'error',
		'react/no-did-mount-set-state': 'error',
		'react/no-did-update-set-state': 'error',
		'react/no-direct-mutation-state': 'error',
		'react/no-is-mounted': 'error',
		'react/no-multi-comp': ['error', {ignoreStateless: true}],
		'react/no-redundant-should-component-update': 'error',
		'react/no-render-return-value': 'error',
		'react/no-string-refs': 'error',
		'react/no-this-in-sfc': 'error',
		'react/no-typos': 'error',
		'react/no-unescaped-entities': 'error',
		'react/no-unknown-property': 'error',
		'react/no-unsafe': ['error', {checkAliases: true}],
		'react/no-unused-state': 'error',
		'react/no-will-update-set-state': 'error',
		'react/prefer-es6-class': 'error',
		'react/prefer-stateless-function': 'error',
		'react/prop-types': ['error', {
			ignore: [
				'aria-label',
				'className',
				'children',
				'id',
				'onClick',
				'style',
			],
		}],
		'react/react-in-jsx-scope': 'error',
		'react/require-optimization': 'error',
		'react/require-render-return': 'error',
		'react/self-closing-comp': ['error', {component: true, html: true}],
		'react/sort-comp': ['error', {
			order: [
				'lifecycle',
				'render',
				'everything-else',
			],
			groups: {
				lifecycle: [
					'displayName',
					'mixins',
					'type-annotations',
					'propTypes',
					'contextTypes',
					'childContextTypes',
					'statics',
					'instance-variables',
					'loadProps',
					'defaultProps',
					'constructor',
					'getDefaultProps',
					'state',
					'getInitialState',
					'getDerivedStateFromProps',
					'getChildContext',
					'componentWillAppear',
					'componentDidAppear',
					'componentWillEnter',
					'componentDidEnter',
					'componentWillMount',
					'UNSAFE_componentWillMount',
					'componentDidMount',
					'componentDidCatch',
					'componentWillReceiveProps',
					'UNSAFE_componentWillReceiveProps',
					'shouldComponentUpdate',
					'componentWillUpdate',
					'UNSAFE_componentWillUpdate',
					'componentDidUpdate',
					'componentWillLeave',
					'componentDidLeave',
					'componentWillUnmount',
				],
			},
		}],
		'react/sort-prop-types': ['error', {ignoreCase: true}],
		'react/state-in-constructor': 'error',
		'react/style-prop-object': 'error',
		'react/void-dom-elements-no-children': 'error',
		'react-hooks/rules-of-hooks': 'error',
		'react-hooks/exhaustive-deps': 'error',
		'require-atomic-updates': 'error',
		'require-await': 'error',
		'require-unicode-regexp': 'error',
		'require-yield': 'error',
		'rest-spread-spacing': ['error', 'never'],
		'semi-spacing': ['error', {before: false, after: true}],
		'semi-style': ['error', 'last'],
		'sonarjs/no-all-duplicated-branches': 'error',
		'sonarjs/no-collapsible-if': 'error',
		'sonarjs/no-duplicated-branches': 'error',
		'sonarjs/no-element-overwrite': 'error',
		'sonarjs/no-extra-arguments': 'error',
		'sonarjs/no-identical-conditions': 'error',
		'sonarjs/no-identical-expressions': 'error',
		'sonarjs/no-inverted-boolean-check': 'error',
		'sonarjs/no-one-iteration-loop': 'error',
		'sonarjs/no-redundant-boolean': 'error',
		'sonarjs/no-use-of-empty-return-value': 'error',
		'sonarjs/prefer-immediate-return': 'error',
		'sonarjs/prefer-object-literal': 'error',
		'sonarjs/prefer-single-boolean-return': 'error',
		'sonarjs/prefer-while': 'error',
		'sort-imports': ['error', {
			ignoreCase: true,
			ignoreMemberSort: false,
			memberSyntaxSortOrder: ['none', 'all', 'multiple', 'single'],
		}],
		'sort-vars': ['error', {ignoreCase: true}],
		'space-before-blocks': 'error',
		'space-before-function-paren': 'error',
		'space-in-parens': ['error', 'never'],
		'space-infix-ops': ['error', {int32Hint: false}],
		'space-unary-ops': ['error', {words: true, nonwords: false}],
		'spaced-comment': ['error', 'always'],
		strict: ['error', 'global'],
		'switch-colon-spacing': ['error', {after: true, before: false}],
		'symbol-description': 'error',
		'template-curly-spacing': ['error', 'never'],
		'template-tag-spacing': ['error', 'always'],
		'unicode-bom': 'error',
		'use-isnan': 'error',
		'valid-typeof': 'error',
		'yield-star-spacing': ['error', {before: true, after: false}],
		yoda: 'error',
		'wrap-iife': 'error',
		'wrap-regex': 'error',

		// WARNINGS

		'array-callback-return': 'warn',
		complexity: 'warn',
		'jasmine/no-disabled-tests': 'warn',
		'jsx-a11y/click-events-have-key-events': 'warn',
		'no-console': 'warn',
		'no-warning-comments': ['warn', {terms: ['todo', 'fixme', 'future'], location: 'anywhere'}],
		'react/boolean-prop-naming': ['warn', {rule: '^(is|has)[A-Z]([A-Za-z0-9]?)+'}],
		'react/jsx-handler-names': ['warn', {
			eventHandlerPrefix: '_handle',
			eventHandlerPropPrefix: 'on',
		}],
		'react/no-find-dom-node': 'warn',
		'react/no-unused-prop-types': ['warn', {skipShapeProps: true}],
		'prefer-rest-params': 'warn',

		// DISABLED

		'array-bracket-newline': 'off',
		'array-element-newline': 'off',
		'arrow-body-style': ['off', 'as-needed'],
		'babel/camelcase': 'off',
		'babel/new-cap': 'off',
		'babel/no-invalid-this': 'off',
		'babel/no-unused-expressions': 'off',
		'babel/quotes': 'off',
		'babel/valid-typeof': 'off',
		camelcase: 'off',
		'capitalized-comments': 'off',
		'class-methods-use-this': 'off',
		curly: 'off',
		'default-case': 'off',
		'filenames/match-regex': 'off',
		'filenames/no-index': 'off',
		'flowtype/no-flow-fix-me-comments': 'off',
		'flowtype/no-mutable-array': 'off',
		'flowtype/require-compound-type-alias': 'off',
		'flowtype/require-inexact-type': 'off',
		'flowtype/require-variable-type': 'off',
		'func-names': 'off',
		'function-paren-newline': 'off',
		'id-blacklist': ['off', 'data', 'err', 'e', 'cb', 'callback'],
		'id-length': ['off', {min: 3, max: 30, exceptions: ['i', 'x']}],
		'id-match': ['off', '^[a-z]+([A-Z][a-z]+)*$', {properties: false}],
		'implicit-arrow-linebreak': 'off',
		// Doesn't let us leave Flow `export type` at the top of the file
		'import/exports-last': 'off',
		'import/group-exports': 'off',
		'import/max-dependencies': 'off',
		// This rule is incredibly slow to execute, and since we already use
		// `import/no-namespace` it doesn't make sense to keep it on
		'import/namespace': 'off',
		'import/no-anonymous-default-export': 'off',
		// Disabled because it can slow down linting, but may be worth trying out later:
		'import/no-cycle': ['off', {maxDepth: 3}],
		// This rule is incredibly slow to execute, and since we dont' use JSDoc
		// it's wasteful to run it
		'import/no-deprecated': 'off',
		'import/no-dynamic-require': 'off',
		'import/no-extraneous-dependencies': 'off',
		'import/no-internal-modules': 'off',
		'import/no-named-export': 'off',
		'import/no-nodejs-modules': 'off',
		'import/no-relative-parent-imports': 'off',
		'import/no-restricted-paths': 'off',
		'import/no-unassigned-import': 'off',
		'import/no-unused-modules': 'off',
		'import/no-webpack-loader-syntax': 'off',
		'import/order': 'off',
		'import/unambiguous': 'off',
		'init-declarations': 'off',
		'jasmine/named-spy': 'off',
		'jasmine/new-line-before-expect': 'off',
		'jasmine/new-line-between-declarations': 'off',
		'jasmine/no-assign-spyon': 'off',
		'jasmine/no-describe-variables': 'off',
		'jasmine/prefer-toHaveBeenCalledWith': 'off',
		'jsx-a11y/label-has-for': 'off',
		'jsx-a11y/no-autofocus': 'off',
		'line-comment-position': 'off',
		'linebreak-style': 'off',
		'lines-around-comment': ['off', {beforeBlockComment: true, beforeLineComment: true}],
		'max-classes-per-file': 'off',
		'multiline-comment-style': 'off',
		'multiline-ternary': 'off',
		'new-cap': 'off',
		'no-case-declarations': 'off',
		'no-confusing-arrow': 'off',
		'no-continue': 'off',
		'no-empty-function': 'off',
		'no-eq-null': 'off',
		'no-extra-parens': 'off',
		'no-invalid-this': 'off',
		'no-extra-label': 'off',
		'no-magic-numbers': 'off',
		'no-mixed-operators': 'off',
		'no-mixed-requires': 'off',
		'no-negated-condition': 'off',
		'no-param-reassign': 'off',
		'no-plusplus': 'off',
		'no-process-exit': 'off',
		'no-restricted-globals': 'off',
		'no-restricted-imports': 'off',
		'no-restricted-properties': 'off',
		'no-restricted-modules': 'off',
		'no-restricted-syntax': 'off',
		'no-shadow': 'off',
		'no-sync': 'off',
		'no-tabs': 'off',
		'no-ternary': 'off',
		'no-undefined': 'off',
		'no-underscore-dangle': 'off',
		'no-unneeded-ternary': 'off',
		'no-unused-labels': 'off',
		'no-use-before-define': 'off',
		'no-useless-return': 'off',
		'nonblock-statement-body-position': 'off',
		'object-curly-newline': 'off',
		'object-curly-spacing': ['off', 'never'],
		'object-property-newline': 'off',
		'one-var': ['off', 'always'],
		'padded-blocks': ['off', 'never'],
		'prefer-destructuring': 'off',
		'prefer-named-capture-group': 'off',
		'promise/avoid-new': 'off',
		'promise/no-callback-in-promise': 'off',
		'promise/no-nesting': 'off',
		'promise/prefer-await-to-callbacks': 'off',
		'promise/prefer-await-to-then': 'off',
		'react/button-has-type': 'off',
		'react/destructuring-assignment': 'off',
		'react/forbid-component-props': 'off',
		'react/forbid-elements': 'off',
		'react/jsx-child-element-spacing': 'off',
		'react/jsx-curly-brace-presence': 'off',
		'react/jsx-filename-extension': 'off',
		'react/jsx-first-prop-new-line': 'off',
		'react/jsx-max-depth': 'off',
		'react/jsx-no-bind': 'off',
		'react/jsx-no-literals': 'off',
		'react/jsx-one-expression-per-line': 'off',
		'react/no-array-index-key': 'off',
		'react/no-set-state': 'off',
		'react/require-default-props': 'off',
		'react/static-property-placement': 'off',
		semi: 'off',
		// Good canditate to be enabled as a replacement for default "complexity" rule
		'sonarjs/cognitive-complexity': 'off',
		'sonarjs/max-switch-cases': 'off',
		'sonarjs/no-duplicate-string': 'off',
		'sonarjs/no-identical-functions': 'off',
		'sonarjs/no-small-switch': 'off',
		'sonarjs/no-useless-catch': 'off',
		'sort-keys': ['off', 'asc', {caseSensitive: false, natural: true}],
		'vars-on-top': 'off',
	},
	settings: {
		'import/ignore': ['node_modules', '.(css|json|less|md|styl)$'],
		react: {
			flowVersion: '0.101.1',
			version: 'detect',
		},
	},
	overrides: [{
		files: ['*.test.js'],
		rules: {
			'flowtype/require-parameter-type': 'off',
			'flowtype/require-return-type': 'off',
			'flowtype/require-valid-file-annotation': 'off',
		},
	}],
};
